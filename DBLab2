create table SALESMAN(Salesman_id integer primary key,Name varchar(20),City varchar(10),Commission integer);
            
        create table CUSTOMER(Customer_id integer primary key,Cust_Name varchar(20),City varchar(10),Grade integer,Salesman_id integer,foreign key(Salesman_id) references SALESMAN(Salesman_id) on delete cascade);
            
        create table ORDERS(Ord_No integer primary key,Purchace_Amt integer,Ord_Date date,Customer_id integer,Salesman_id integer,foreign key(Customer_id) references CUSTOMER(Customer_id)on delete cascade,foreign key(Salesman_id) references SALESMAN(Salesman_id)on delete cascade);
            
        insert into SALESMAN values(10,'Akash','Mangalore',2);
        insert into SALESMAN values(20,'Ram','Bangalore',10);
        insert into SALESMAN values(30,'Raj','Mangalore',5);
        insert into SALESMAN values(40,'Kiran','Mysore',15);
        insert into SALESMAN values(50,'Parth','Bangalore',3);
            
        insert into CUSTOMER values(1000,'Avinash','Mangalore',100,10);
        insert into CUSTOMER values(2000,'Kumar','Bangalore',200,20);
        insert into CUSTOMER values(3000,'Preethi','Mysore',300,40);
        insert into CUSTOMER values(4000,'Smitha','Mangalore',400,30);
        insert into CUSTOMER values(5000,'Nandu','Bangalore',400,50);
            
        insert into ORDERS values(551,5000,'2020-01-04',1000,10);
        insert into ORDERS values(552,2500,'2020-02-05',2000,20);
        insert into ORDERS values(553,500,'2020-03-03',3000,40);
        insert into ORDERS values(554,1500,'2020-04-02',4000,30);
        insert into ORDERS values(555,2000,'2020-06-03',2000,10);

---

**Query #1**

    select * from SALESMAN;

| Salesman_id | Name  | City      | Commission |
| ----------- | ----- | --------- | ---------- |
| 10          | Akash | Mangalore | 2          |
| 20          | Ram   | Bangalore | 10         |
| 30          | Raj   | Mangalore | 5          |
| 40          | Kiran | Mysore    | 15         |
| 50          | Parth | Bangalore | 3          |

---
**Query #2**

    select * from CUSTOMER;

| Customer_id | Cust_Name | City      | Grade | Salesman_id |
| ----------- | --------- | --------- | ----- | ----------- |
| 1000        | Avinash   | Mangalore | 100   | 10          |
| 2000        | Kumar     | Bangalore | 200   | 20          |
| 3000        | Preethi   | Mysore    | 300   | 40          |
| 4000        | Smitha    | Mangalore | 400   | 30          |
| 5000        | Nandu     | Bangalore | 400   | 50          |

---
**Query #3**

    select * from ORDERS;

| Ord_No | Purchace_Amt | Ord_Date   | Customer_id | Salesman_id |
| ------ | ------------ | ---------- | ----------- | ----------- |
| 551    | 5000         | 2020-01-04 | 1000        | 10          |
| 552    | 2500         | 2020-02-05 | 2000        | 20          |
| 553    | 500          | 2020-03-03 | 3000        | 40          |
| 554    | 1500         | 2020-04-02 | 4000        | 30          |
| 555    | 2000         | 2020-06-03 | 2000        | 10          |

---
**Query #4**

    select count(*)
    from CUSTOMER
    where grade>(select avg(grade)
                 from CUSTOMER 
                 where city='Bangalore');

| count(*) |
| -------- |
| 2        |

---
**Query #5**

    select Salesman_id,Name 
     from SALESMAN 
     where Salesman_id 
     in (select Salesman_id 
         from ORDERS 
         group by Salesman_id 
         having count(*)>1);

| Salesman_id | Name  |
| ----------- | ----- |
| 10          | Akash |

---
**Query #6**

    select * from SALESMAN 
    where Salesman_id 
    in (select Salesman_id 
        from SALESMAN s 
        where exists (select Salesman_id 
                      from CUSTOMER c 
                      where s.City=c.City and    s.Salesman_id=c.Salesman_id)
        union 
        select Salesman_id 
        from SALESMAN s
        where not exists (select Salesman_id 
                          from CUSTOMER c 
                          where s.City=c.City and s.Salesman_id=c.Salesman_id));

| Salesman_id | Name  | City      | Commission |
| ----------- | ----- | --------- | ---------- |
| 10          | Akash | Mangalore | 2          |
| 20          | Ram   | Bangalore | 10         |
| 30          | Raj   | Mangalore | 5          |
| 40          | Kiran | Mysore    | 15         |
| 50          | Parth | Bangalore | 3          |

---
**Query #7**

    create view Best_Salesman as 
    select Salesman_id, Purchace_Amt, Ord_Date
    from ORDERS 
    where Purchace_Amt in ( select max(Purchace_Amt)
                           from ORDERS
                           group by Ord_Date);

There are no results to be displayed.

---
**Query #8**

    select * from Best_Salesman;

| Salesman_id | Purchace_Amt | Ord_Date   |
| ----------- | ------------ | ---------- |
| 10          | 5000         | 2020-01-04 |
| 20          | 2500         | 2020-02-05 |
| 40          | 500          | 2020-03-03 |
| 30          | 1500         | 2020-04-02 |
| 10          | 2000         | 2020-06-03 |

---
**Query #9**

    delete from SALESMAN
    where Salesman_id=10;

There are no results to be displayed.

---
**Query #10**

    select * from SALESMAN;

| Salesman_id | Name  | City      | Commission |
| ----------- | ----- | --------- | ---------- |
| 20          | Ram   | Bangalore | 10         |
| 30          | Raj   | Mangalore | 5          |
| 40          | Kiran | Mysore    | 15         |
| 50          | Parth | Bangalore | 3          |

---
**Query #11**

    select * from CUSTOMER;

| Customer_id | Cust_Name | City      | Grade | Salesman_id |
| ----------- | --------- | --------- | ----- | ----------- |
| 2000        | Kumar     | Bangalore | 200   | 20          |
| 3000        | Preethi   | Mysore    | 300   | 40          |
| 4000        | Smitha    | Mangalore | 400   | 30          |
| 5000        | Nandu     | Bangalore | 400   | 50          |

---
**Query #12**

    select * from ORDERS;

| Ord_No | Purchace_Amt | Ord_Date   | Customer_id | Salesman_id |
| ------ | ------------ | ---------- | ----------- | ----------- |
| 552    | 2500         | 2020-02-05 | 2000        | 20          |
| 553    | 500          | 2020-03-03 | 3000        | 40          |
| 554    | 1500         | 2020-04-02 | 4000        | 30          |
